

이 곳은 PC 파트의 프로그램을 Python 에서 Cpp 로 바꾸고 난 다음의 폴더이다.

코딩이 훨씬 간편한 Python 에서 그렇지 못한 Cpp 로 바꾸게 된 이유는 프로그램의 속도 때문이다.
로봇의 균형을 잡는 제어를 하기 위해서는 1ms 단위의 빠른 반응속도로 센서값을 읽어내고 제어값을 찾아서
로봇의 균형을 잡아야 하는데, Python 으로 시리얼 통신을 하면서 학습을 하니까 1초에 9번정도밖에 학습을 하지 못했다.
이는 한 번 학습/작동을 하는데 111ms 정도의 시간이 소모된다는 뜻인데, 이 정도의 느린 반응속도로는 적절한 제어를
하지 못한다. 알고리즘상의 최적화를 한다고 해도 터무니없이 긴 시간이다. 그래서 보다 low-level 의 언어를 사용해야할
필요성을 느꼈고 Cpp 언어로 바꿨다.

 Cpp 언어로 바꾸면서 추가적으로 해야되는 코딩들은 다음과 같다.

1. 시리얼 통신 : 파이썬에서는 Serial.begin() 으로 시리얼 통신을 위한 포트 연결이 끝난다.
		 하지만 cpp 에서는 포트 이름으로 연결을 하는것, 통신 설정을 하는것, 딜레이 설정을 하는것
		 들을 직접 코딩을 해야한다.

2. 데이터 디코딩 : Python 에서는 decode() 함수 하나만으로 원하는 자료형으로 바꿔서 데이터를 쓸 수 있으나
		   Cpp 에서는 입력 신호가 1바이트 단위로 그대로 들어오기 때문에 이 중에서 필요한 값만 잘 걸러내는
		   작업을 해주어야 한다.

3. 랜덤변수	 : Cpp 에서는 가우시안 랜덤 노이즈를 사용하기 위하여 노이즈 엔진/클라스를 각각 선언하고 노이즈를
		   생성하는 함수를 호출해야 한다.

여기서 1. 시리얼 통신 을 할 때, 가독성을 용이하게 하기 위해서 클라스로 모듈화하였다.


1. Cpp_Test_Arduino

	cpp 로 학습이 잘 되는지 확인하기위해 가상의 물리환경을 설정하고 통신을 한다.

2. Cpp_Test_Model

	위의 상황만 추가로 적용하고 큰 메커니즘은 바뀌지 않는다. 넘어지는 상황이 발생하면 이전상황으로 돌아가고 다시 학습을 한다.

3. Test_Gaussian_Random_Variable

	가우시안 랜덤 노이즈를 발생시키는것을 테스트한 프로그램이다. 이 코드를 활용하여 액션을 고를때 랜덤한 선택을 할 수 있도록 하였다.

4. SIORSerial

	Cpp 로 시리얼통신을 하기 위한 클래스이다. Window 에 내장되어있는 함수들을 활용하여 작성하였다.